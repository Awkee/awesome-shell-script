#!/bin/bash

usage()
{
cat <<END
Usage:
	`basename $0` <抓包文件路径>  [session_id] [out_file_prefix]

	DCC消息抓包文件分析工具, tshark命令分析脚本 

	如果参数指定了 session_id 可以查找对应的消息

END
}

if [ "$#" -lt "1" -o "$#" -gt "3" ] ; then
	usage
	exit 0
fi


port_address="1024-20000"

session_id="$2"
out_prefix="${3}"
out_flag=0

i=1
for cap_file in `ls $1`
do

	if [ ! -z "${out_prefix}" ] ; then
		out_flag=1
		out_file=`printf "%s.%03d.cap" $out_prefix $i`
		str_options="-w ${out_file}"
		tshark -r $cap_file ${str_options}  -d tcp.port==${port_address},diameter -q -z diameter,avp,272,Session-Id,Origin-Host,3GPP-Charging-Id,CC-Request-Type,CC-Request-Number,Subscription-Id-Data,Event-Timestamp,Result-Code,Rating-Group,CC-Total-Octets,CC-Input-Octets,CC-Output-Octets,3GPP-Reporting-Reason,3GPP-Charging-Id,3GPP-Charging-Characteristics,3GPP-RAT-Type,3GPP-User-Location-Info   "diameter.Session-Id == \"$session_id\" " | grep "${session_id}" | awk '{ out_flag=0; for( i = 1; i <= NF; i ++ ) { if( $i ~/Session-Id/) { out_flag=1; } if( out_flag == 1) printf("%s ", $i) } printf("\n");}'
	else
		tshark -r $cap_file ${str_options}  -d tcp.port==${port_address},diameter -q -z diameter,avp,272,Session-Id,Origin-Host,3GPP-Charging-Id,CC-Request-Type,CC-Request-Number,Subscription-Id-Data,Event-Timestamp,Result-Code,Rating-Group,CC-Total-Octets,CC-Input-Octets,CC-Output-Octets,3GPP-Reporting-Reason,3GPP-Charging-Id,3GPP-Charging-Characteristics,3GPP-RAT-Type,3GPP-User-Location-Info   "diameter.Session-Id == \"$session_id\" " | grep "${session_id}"  
	fi
#	tshark -r $cap_file ${str_options}  -d tcp.port==${port_address},diameter -q -z diameter,avp,272,Session-Id,Origin-Host,3GPP-Charging-Id,CC-Request-Type,CC-Request-Number,Subscription-Id-Data,Event-Timestamp,Result-Code,Rating-Group,CC-Total-Octets,CC-Input-Octets,CC-Output-Octets,3GPP-Reporting-Reason,3GPP-Charging-Id,3GPP-Charging-Characteristics,3GPP-RAT-Type,3GPP-User-Location-Info   "diameter.Session-Id == \"$session_id\" " | grep "${session_id}" | awk '{ out_flag=0; for( i = 1; i <= NF; i ++ ) { if( $i ~/Session-Id/) { out_flag=1; } if( out_flag == 1) printf("%s ", $i) } printf("\n");}'
	i=`expr $i + 1`
done

if [ "$out_flag" = "1" ] ; then
	mergecap -w ${out_prefix}.cap ${out_prefix}.???.cap
	[[ "$?" = "0" ]] && rm -f ${out_prefix}.???.cap || echo "merge error!file:[${out_prefix}.cap],error_return [ $? ] "
fi



